/* "Current" classes for the scheduler */
Classes {
	Classid: int, primary key, not null, auto-increment
	name: varchar, not null
	dept: varchar, not null
	courseNo: int, not null
	sections: list of ints --list of keys from Sections table
	description: varchar
	term: varchar, not null
	registrationPeriod: varchar
	graduate: boolean, not null
	undergraduate: boolean, not null
	campus: varchar
}

Sections {
	Sectionid: int, primary key, not null, auto-increment
	section: int, not null
	crn: int, not null
	honors: boolean, not null
	instructorPrimary: int --id from Professors table
	instructorsSecondary: list of ints --id from Professors table
	attributes: list of varchars
	type: varchar
	instructionalMethod: varchar
	credits: int
	meetingTimes: list of ints --list of keys from MeetingTimes table
}

MeetingTimes {
	MeetingTime_id: int, primary key, not null, auto-increment
	type: varchar
	startTime: varchar
	endTime: varchar
	days: list of varchar
	location: varchar
	dateRange: varchar
	instructor: varchar --instructor for this specific meeting time (prof, TA, etc)
}

/* Historical classes for analytics */

Create Schema Classes
Use Classes;

create table Classes(
	Classesid: int primary key not null auto-increment,
	Class_name: varchar, not null
	Class_dept: varchar, not null
	courseNo: int, not null
	Sections: list of ints --list of keys from PrevSections table
	term: varchar, not null
	campus: varchar
	constraint Classes_PK primary key(Classesid),
	constraint Classes_FK foreign key(Sections) references(Section_id));

create table Sections (
	Section_id: int, primary key, not null, auto-increment
	section_name: int, not null
	honors: boolean, not null
	instructor_Primary_id: int, not null 
	instructors_Secondary_id: int, not null
	A_Grade: int not null,
	B_Grade: int not null,
	C_Grade: int not null,
	D_Grade: int not null,
	F_Grade: int not null,
	GPA: float, not null
	I_Grade: int, not null
	S_Grade: int, not null
	U_Grade: int, not null
	Q_Grade: int, not null
	X: int, not null
	total_people: int, not null (maybe)
	term: varchar, not null
	year: int, not null

	constraint Sections_PK primary key(Section_id),
	constraint Sections_FK foreign key(Prof_id) references(instructor_Primary_id)
	constraint Sections_FK foreign key(Prof_id) references(instructor_Secondary_id)
	constraint Sections_FK foreign key(Prof_id) references(instructor_Secondary)
	constraint Sections_FK foreign key(Prof_id) references(instructor_Secondary)
	constraint Sections_FK foreign key(Sections) references(Section_id));

create table Professors (
	Prof_id: int, primary key, not null, auto-increment
	Prof_firstName: varchar(30)
	Prof_middleName: varchar(40)
	Prof_lastName: varchar(40) notnull
	constraint Professors_PK primary key(Section_id));